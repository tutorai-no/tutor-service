# Generated by Django 5.1.11 on 2025-07-19 19:20

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0003_remove_chat_models'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DocumentUpload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('original_filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('content_type', models.CharField(max_length=100)),
                ('file_hash', models.CharField(db_index=True, max_length=64)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('total_chunks', models.PositiveIntegerField(default=0)),
                ('processed_chunks', models.PositiveIntegerField(default=0)),
                ('page_count', models.PositiveIntegerField(default=0)),
                ('graph_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('total_nodes', models.PositiveIntegerField(default=0)),
                ('total_edges', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='document_uploads', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='document_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'document_uploads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DocumentChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chunk_index', models.PositiveIntegerField()),
                ('text_content', models.TextField()),
                ('token_count', models.PositiveIntegerField(default=0)),
                ('page_numbers', models.JSONField(blank=True, default=list)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('has_embedding', models.BooleanField(default=False)),
                ('embedding_model', models.CharField(blank=True, max_length=100)),
                ('graph_extracted', models.BooleanField(default=False)),
                ('nodes_count', models.PositiveIntegerField(default=0)),
                ('edges_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='document_processing.documentupload')),
            ],
            options={
                'db_table': 'document_chunks',
                'ordering': ['document', 'chunk_index'],
            },
        ),
        migrations.CreateModel(
            name='ProcessingJob',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('job_type', models.CharField(max_length=50)),
                ('content_object_id', models.UUIDField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('total_steps', models.PositiveIntegerField(default=0)),
                ('completed_steps', models.PositiveIntegerField(default=0)),
                ('current_step_description', models.CharField(blank=True, max_length=200)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='processing_jobs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'processing_jobs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='URLUpload',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('url', models.URLField(max_length=2000)),
                ('title', models.CharField(blank=True, max_length=500)),
                ('domain', models.CharField(blank=True, max_length=255)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('processing_started_at', models.DateTimeField(blank=True, null=True)),
                ('processing_completed_at', models.DateTimeField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True)),
                ('total_chunks', models.PositiveIntegerField(default=0)),
                ('processed_chunks', models.PositiveIntegerField(default=0)),
                ('content_length', models.PositiveIntegerField(default=0)),
                ('graph_id', models.CharField(blank=True, db_index=True, max_length=100)),
                ('total_nodes', models.PositiveIntegerField(default=0)),
                ('total_edges', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='url_uploads', to='courses.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='url_uploads', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'url_uploads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='URLChunk',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('chunk_index', models.PositiveIntegerField()),
                ('text_content', models.TextField()),
                ('token_count', models.PositiveIntegerField(default=0)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('has_embedding', models.BooleanField(default=False)),
                ('embedding_model', models.CharField(blank=True, max_length=100)),
                ('graph_extracted', models.BooleanField(default=False)),
                ('nodes_count', models.PositiveIntegerField(default=0)),
                ('edges_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('url_upload', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chunks', to='document_processing.urlupload')),
            ],
            options={
                'db_table': 'url_chunks',
                'ordering': ['url_upload', 'chunk_index'],
            },
        ),
        migrations.AddIndex(
            model_name='documentupload',
            index=models.Index(fields=['user', 'status'], name='document_up_user_id_5d14c1_idx'),
        ),
        migrations.AddIndex(
            model_name='documentupload',
            index=models.Index(fields=['course', 'status'], name='document_up_course__b4b893_idx'),
        ),
        migrations.AddIndex(
            model_name='documentupload',
            index=models.Index(fields=['graph_id'], name='document_up_graph_i_01845a_idx'),
        ),
        migrations.AddIndex(
            model_name='documentupload',
            index=models.Index(fields=['created_at'], name='document_up_created_82806a_idx'),
        ),
        migrations.AddIndex(
            model_name='documentchunk',
            index=models.Index(fields=['document', 'chunk_index'], name='document_ch_documen_15f3c0_idx'),
        ),
        migrations.AddIndex(
            model_name='documentchunk',
            index=models.Index(fields=['has_embedding'], name='document_ch_has_emb_bb6147_idx'),
        ),
        migrations.AddIndex(
            model_name='documentchunk',
            index=models.Index(fields=['graph_extracted'], name='document_ch_graph_e_432683_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='documentchunk',
            unique_together={('document', 'chunk_index')},
        ),
        migrations.AddIndex(
            model_name='processingjob',
            index=models.Index(fields=['user', 'status'], name='processing__user_id_9a3b61_idx'),
        ),
        migrations.AddIndex(
            model_name='processingjob',
            index=models.Index(fields=['job_type', 'status'], name='processing__job_typ_1c58ad_idx'),
        ),
        migrations.AddIndex(
            model_name='processingjob',
            index=models.Index(fields=['content_object_id'], name='processing__content_169d5d_idx'),
        ),
        migrations.AddIndex(
            model_name='processingjob',
            index=models.Index(fields=['created_at'], name='processing__created_7e276e_idx'),
        ),
        migrations.AddIndex(
            model_name='urlupload',
            index=models.Index(fields=['user', 'status'], name='url_uploads_user_id_68b45e_idx'),
        ),
        migrations.AddIndex(
            model_name='urlupload',
            index=models.Index(fields=['course', 'status'], name='url_uploads_course__aa388c_idx'),
        ),
        migrations.AddIndex(
            model_name='urlupload',
            index=models.Index(fields=['graph_id'], name='url_uploads_graph_i_8fa6f0_idx'),
        ),
        migrations.AddIndex(
            model_name='urlupload',
            index=models.Index(fields=['domain'], name='url_uploads_domain_8c2677_idx'),
        ),
        migrations.AddIndex(
            model_name='urlupload',
            index=models.Index(fields=['created_at'], name='url_uploads_created_20f756_idx'),
        ),
        migrations.AddIndex(
            model_name='urlchunk',
            index=models.Index(fields=['url_upload', 'chunk_index'], name='url_chunks_url_upl_aeea8d_idx'),
        ),
        migrations.AddIndex(
            model_name='urlchunk',
            index=models.Index(fields=['has_embedding'], name='url_chunks_has_emb_4ee426_idx'),
        ),
        migrations.AddIndex(
            model_name='urlchunk',
            index=models.Index(fields=['graph_extracted'], name='url_chunks_graph_e_510538_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='urlchunk',
            unique_together={('url_upload', 'chunk_index')},
        ),
    ]

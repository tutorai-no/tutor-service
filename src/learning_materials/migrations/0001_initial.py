# Generated by Django 5.1.2 on 2024-10-20 21:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cardset',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='The name of the cardset', max_length=100)),
                ('description', models.TextField(help_text='The description of the cardset')),
                ('subject', models.CharField(default='Unknown', help_text='The subject of the cardset', max_length=100)),
                ('user', models.ForeignKey(help_text='The user who created this cardset', on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ChatHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('chat_id', models.CharField(max_length=255, unique=True)),
                ('messages', models.JSONField(default=list, help_text='List of chat messages')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_histories', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FlashcardModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('front', models.TextField(help_text='The front of the flashcard')),
                ('back', models.TextField(help_text='The back of the flashcard')),
                ('proficiency', models.IntegerField(default=0, help_text='The profeciency of the flashcard')),
                ('time_of_next_review', models.DateTimeField(auto_now=True, help_text='The time of the next review')),
                ('cardset', models.ForeignKey(help_text='The cardset to which the flashcard belongs', on_delete=django.db.models.deletion.CASCADE, to='learning_materials.cardset')),
            ],
        ),
        migrations.CreateModel(
            name='QuizModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('document_name', models.CharField(default='unknown', help_text='The name of the document', max_length=100)),
                ('start_page', models.IntegerField(default=1, help_text='The starting page of the quiz')),
                ('end_page', models.IntegerField(default=1, help_text='The ending page of the quiz')),
                ('users', models.ManyToManyField(help_text='Users associated with this quiz', related_name='quizzes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='QuestionAnswerModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(help_text='The question part of the QA pair')),
                ('answer', models.TextField(help_text='The answer part of the QA pair')),
                ('quiz', models.ForeignKey(help_text='The quiz to which the question-answer pair belongs', on_delete=django.db.models.deletion.CASCADE, to='learning_materials.quizmodel')),
            ],
        ),
        migrations.CreateModel(
            name='MultipleChoiceQuestionModel',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField(help_text='The question part of the multiple-choice question')),
                ('options', models.JSONField(help_text='The list of options to choose from')),
                ('answer', models.TextField(help_text='The correct answer to the question')),
                ('quiz', models.ForeignKey(help_text='The quiz to which the multiple-choice question belongs', on_delete=django.db.models.deletion.CASCADE, to='learning_materials.quizmodel')),
            ],
        ),
    ]

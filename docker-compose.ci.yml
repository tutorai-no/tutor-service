# Minimal docker-compose setup for CI/CD testing
services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: aksio-backend-ci
    command: |
      sh -c "
        echo 'Waiting for database...'
        sleep 10
        python manage.py migrate --noinput
        python manage.py test --keepdb --verbosity=2
      "
    depends_on:
      - db
      - redis
    environment:
      # Django Configuration
      - DJANGO_SETTINGS_MODULE=aksio.settings.testing
      - DJANGO_SECRET_KEY=ci-test-secret-key-not-for-production
      - DJANGO_DEBUG=False
      
      # Database Configuration
      - DATABASE_HOST=db
      - DATABASE_PORT=5432
      - DATABASE_NAME=aksio_db
      - DATABASE_USER=aksio_user
      - DATABASE_PASSWORD=aksio_password
      
      # Redis Configuration
      - REDIS_URL=redis://redis:6379/0
      
      # Disable external services for CI
      - ENABLE_AI_FEATURES=False
      - ENABLE_DOCUMENT_PROCESSING=False
      - ENABLE_REAL_TIME_CHAT=False
      - ENABLE_KAFKA=False
      
      # Mock external service URLs
      - SCRAPER_SERVICE_URL=http://localhost:8080
      - RETRIEVER_SERVICE_URL=http://localhost:8002
      - OPENAI_API_KEY=test-key
      
      # Logging
      - LOGGING_LEVEL=ERROR
    networks:
      - ci_network

  db:
    image: postgres:15-alpine
    container_name: aksio-db-ci
    environment:
      - POSTGRES_DB=aksio_db
      - POSTGRES_USER=aksio_user
      - POSTGRES_PASSWORD=aksio_password
      - POSTGRES_HOST_AUTH_METHOD=trust
    ports:
      - "5432:5432"
    networks:
      - ci_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U aksio_user -d aksio_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: aksio-redis-ci
    ports:
      - "6379:6379"
    command: redis-server --appendonly no --save ""
    networks:
      - ci_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  ci_network:
    driver: bridge
[flake8]
max-line-length = 88
max-complexity = 12
extend-ignore = 
    # E203: whitespace before ':' (conflicts with black)
    E203,
    # W503: line break before binary operator (conflicts with black)
    W503,
    # E501: line too long (handled by black)
    E501,
    # F401: imported but unused (handled by autoflake)
    F401,
    # B008: Do not perform function calls in argument defaults
    B008,
    # DJ01: Avoid using null=True on string-based fields
    DJ01,
    # DJ03: Avoid using any() or all() on a queryset
    DJ03

exclude = 
    .git,
    __pycache__,
    .venv,
    venv,
    .env,
    env,
    migrations,
    .mypy_cache,
    .pytest_cache,
    htmlcov,
    build,
    dist,
    *.egg-info,
    node_modules,
    static,
    staticfiles,
    media

per-file-ignores =
    # Tests can use assert statements and don't need docstrings
    */tests/*:D,S101
    # Settings files can have long lines and unused imports
    */settings/*:E501,F401,F403
    # URLs files don't need docstrings
    */urls.py:D
    # __init__.py files can have unused imports
    */__init__.py:F401
    # Management commands don't need docstrings for handle method
    */management/commands/*:D102
    # Migration files
    */migrations/*:E501,F401

# Flake8 plugins configuration
doctests = True
docstring-convention = google

# pydocstyle configuration
[pydocstyle]
convention = google
add-ignore = 
    # D100: Missing docstring in public module
    D100,
    # D104: Missing docstring in public package
    D104,
    # D105: Missing docstring in magic method
    D105,
    # D106: Missing docstring in public nested class
    D106,
    # D107: Missing docstring in __init__
    D107

match = (?!migrations|tests).*\.py

[mypy]
python_version = 3.11
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
plugins = mypy_django_plugin.main, mypy_drf_plugin.main

[mypy-*.migrations.*]
ignore_errors = true

[mypy-*.settings.*]
ignore_errors = true

[mypy-*.tests.*]
ignore_errors = true

[tool:pytest]
DJANGO_SETTINGS_MODULE = aksio.settings.testing
python_files = tests.py test_*.py *_tests.py
testpaths = tests
addopts = 
    --reuse-db
    --nomigrations
    --cov=.
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=80
    --strict-markers
    --strict-config
    --disable-warnings
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    unit: marks tests as unit tests
    integration: marks tests as integration tests
    functional: marks tests as functional tests
    django_db: mark test to use django database
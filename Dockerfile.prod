# Production Dockerfile for Aksio Backend
FROM python:3.11-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies
RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        postgresql-client \
        build-essential \
        libpq-dev \
        curl \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN addgroup --system --gid 1001 aksio \
    && adduser --system --uid 1001 aksio

# Set work directory
WORKDIR /app

# Install Python dependencies
COPY requirements/ requirements/
RUN pip install --no-cache-dir -r requirements/production.txt

# Copy project
COPY . .

# Change ownership to app user
RUN chown -R aksio:aksio /app
USER aksio

# Collect static files
RUN python manage.py collectstatic --noinput --settings=aksio.settings.production

# Health check
HEALTHCHECK --interval=30s --timeout=30s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:$PORT/api/health/ || exit 1

# Run gunicorn
CMD exec gunicorn --bind 0.0.0.0:$PORT --workers 2 --timeout 120 aksio.wsgi:application
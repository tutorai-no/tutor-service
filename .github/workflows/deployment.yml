name: Deploy

on:
  workflow_run:
    workflows: ["CI"]
    branches: ["main"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: [self-hosted, Linux, X64]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Pull latest Docker image and restart services
        env:
          OPENAI_API_KEY: ${{ secrets.PROD_OPENAI_API_KEY }}
          MONGODB_URI: ${{ secrets.PROD_MONGODB_URI }}
          MONGODB_DATABASE: ${{ secrets.PROD_MONGODB_DATABASE }}
          MONGODB_COLLECTION: ${{ secrets.PROD_MONGODB_COLLECTION }}
          RAG_DATABASE_SYSTEM: ${{ secrets.PROD_RAG_DATABASE_SYSTEM }}
          DJANGO_SECRET_KEY: ${{ secrets.PROD_DJANGO_SECRET_KEY }}
          EMAIL_HOST_USER: ${{ secrets.PROD_EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.PROD_EMAIL_HOST_PASSWORD }}
          AZURE_STORAGE_CONNECTION_STRING: ${{ secrets.PROD_AZURE_STORAGE_CONNECTION_STRING }}
          AZURE_STORAGE_CONTAINER_NAME: ${{ secrets.PROD_AZURE_STORAGE_CONTAINER_NAME }}
          BASE_URL_SCRAPER: ${{ secrets.PROD_BASE_URL_SCRAPER }}
          BASE_URL_FRONTEND: ${{ secrets.PROD_BASE_URL_FRONTEND }}

        run: |

          docker compose down
          docker compose build
          docker compose run backend python manage.py migrate
          docker compose up -d 